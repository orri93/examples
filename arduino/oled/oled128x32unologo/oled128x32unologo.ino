/*
 * 	A4 (SDA), A5 (SCL)
 */

/* https://sandhansblog.wordpress.com/2017/04/16/interfacing-displaying-a-custom-graphic-on-an-0-96-i2c-oled/ */

#include <Arduino.h>
#include <Wire.h>
#include <U8g2lib.h>

#define FDS_LOGO_TYPE static const unsigned char PROGMEM

#define DELAY_LOGO 3000
#define PIN_SDA      A4
#define PIN_SCL      A5

/* Size of bitmap is 128x32
 * CNT is 128 / 8 = 16 or 0x10 
 *   H is 32 or 0x20
 */
#define BITMAP_CNT 0x10
#define BITMAP_H   0x20


U8G2_SSD1306_128X32_UNIVISION_1_HW_I2C u8g2(U8G2_R0);
//U8G2_SSD1306_128X32_UNIVISION_2_HW_I2C u8g2(U8G2_R0);
//U8G2_SSD1306_128X32_UNIVISION_F_HW_I2C u8g2(U8G2_R0);
//U8G2_SSD1306_128X32_UNIVISION_1_2ND_HW_I2C u8g2(U8G2_R0);
//U8G2_SSD1306_128X32_UNIVISION_2_2ND_HW_I2C u8g2(U8G2_R0);
//U8G2_SSD1306_128X32_UNIVISION_F_2ND_HW_I2C u8g2(U8G2_R0);

#define ironman_width 44
#define ironman_height 32
static const unsigned char ironman_bits[] PROGMEM = {
 0x00, 0x00, 0xfc, 0x03, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x3f, 0x00, 0x00,
 0x00, 0xf8, 0xff, 0xff, 0x01, 0x00, 0x00, 0x86, 0xff, 0x1f, 0x06, 0x00,
 0x80, 0x81, 0xff, 0x1f, 0x18, 0x00, 0xc0, 0x80, 0xff, 0x1f, 0x30, 0x00,
 0x20, 0x80, 0xff, 0x1f, 0xc0, 0x00, 0x10, 0x00, 0xff, 0x0f, 0x80, 0x01,
 0x08, 0x00, 0xff, 0x0f, 0x00, 0x01, 0x08, 0x00, 0xff, 0x0f, 0x00, 0x02,
 0x08, 0x00, 0xff, 0x0f, 0x00, 0x02, 0x08, 0x00, 0xfe, 0x07, 0x00, 0x02,
 0x08, 0x00, 0xfe, 0x07, 0x00, 0x02, 0x08, 0x00, 0xfe, 0x07, 0x00, 0x02,
 0x08, 0x00, 0x00, 0x00, 0x00, 0x06, 0x08, 0x00, 0x00, 0x00, 0x00, 0x06,
 0x08, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x06,
 0x0c, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x06,
 0x0c, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x06,
 0x0c, 0x00, 0x00, 0x00, 0x00, 0x06, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x06,
 0x06, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x06,
 0x06, 0x00, 0x00, 0x00, 0x00, 0x0e, 0xc6, 0x07, 0x00, 0x00, 0x7c, 0x0e,
 0xe6, 0xff, 0xff, 0xff, 0xff, 0x0e, 0xe6, 0xff, 0x03, 0xf8, 0xff, 0x0c,
 0x02, 0x3f, 0x00, 0x80, 0x1f, 0x0c, 0x02, 0x00, 0x00, 0x00, 0x00, 0x0c,
 0x03, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x0c,
 0x03, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x0c,
 0x03, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x07, 0x00, 0x00, 0x00, 0x00, 0x06,
 0x07, 0x00, 0x00, 0x00, 0x00, 0x06, 0x16, 0x00, 0x00, 0x00, 0x00, 0x06,
 0x2e, 0x00, 0x00, 0x00, 0x80, 0x07, 0x6e, 0x00, 0x00, 0x00, 0x40, 0x07,
 0x6e, 0x00, 0x00, 0x00, 0x60, 0x07, 0xde, 0x00, 0x00, 0x00, 0xb0, 0x07,
 0xde, 0x00, 0x00, 0x00, 0xb0, 0x07, 0x9c, 0x01, 0x00, 0x00, 0xd8, 0x03,
 0xbc, 0x01, 0x00, 0x00, 0xf8, 0x03, 0x3c, 0x01, 0x00, 0x00, 0xe8, 0x03,
 0x7c, 0x03, 0x00, 0x00, 0xf4, 0x03, 0xfc, 0x02, 0x00, 0x00, 0xf4, 0x03,
 0xfc, 0xc2, 0xff, 0x1f, 0xfa, 0x03, 0xf8, 0x25, 0xff, 0x27, 0xfa, 0x01,
 0xf8, 0x38, 0x00, 0x60, 0xf9, 0x01, 0xf8, 0x10, 0x00, 0xc0, 0xf8, 0x01,
 0xf0, 0x00, 0x00, 0x00, 0xf8, 0x01, 0xf0, 0x00, 0x00, 0x00, 0xf8, 0x01,
 0xf0, 0x00, 0xf8, 0x00, 0xf8, 0x00, 0xe0, 0xc1, 0xff, 0x0f, 0xf8, 0x00,
 0xc0, 0xe3, 0xff, 0x1f, 0x7c, 0x00, 0x80, 0xff, 0xff, 0x7f, 0x3e, 0x00,
 0x00, 0xff, 0xff, 0x7f, 0x0f, 0x00, 0x00, 0xf6, 0x00, 0xfe, 0x07, 0x00,
 0x00, 0x3c, 0x00, 0xb0, 0x01, 0x00, 0x00, 0x08, 0x00, 0x40, 0x00, 0x00 };

 #define fds_pid_logo_width 128
#define fds_pid_logo_height 32
static const unsigned char fds_pid_logo_bits[] PROGMEM = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x7f, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0xe0, 0xf8, 0x00, 0x40, 0x01, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0xf0, 0x00, 0xf0, 0xc7, 0xff, 0x00,
   0xf8, 0x00, 0xfc, 0x03, 0xc3, 0x7f, 0x00, 0x00, 0x00, 0x30, 0xe0, 0x00,
   0xf8, 0xcf, 0xff, 0x03, 0xfc, 0x00, 0xbc, 0x0f, 0xc3, 0xfb, 0x01, 0x00,
   0x00, 0x38, 0xe0, 0x01, 0xf8, 0xdf, 0xff, 0x07, 0xfe, 0x00, 0x0c, 0x0c,
   0xc3, 0x80, 0x03, 0x00, 0x00, 0x1c, 0xc0, 0x01, 0xfc, 0xc7, 0xff, 0x0f,
   0xff, 0x00, 0x0c, 0x1c, 0xc3, 0x00, 0x07, 0x00, 0x00, 0x0c, 0x80, 0x01,
   0xfc, 0xc3, 0xff, 0x1f, 0xff, 0x00, 0x1c, 0x1c, 0xc3, 0x00, 0x06, 0x00,
   0x00, 0x0e, 0x00, 0x01, 0x3e, 0xc0, 0xc7, 0x1f, 0x3f, 0x00, 0x0c, 0x0c,
   0xc3, 0x00, 0x0e, 0x00, 0x00, 0x07, 0x00, 0x03, 0x3e, 0xc0, 0x07, 0x1f,
   0x3f, 0x00, 0x0c, 0x1c, 0xc3, 0x00, 0x0c, 0x00, 0x00, 0x87, 0x40, 0x02,
   0x3c, 0xc0, 0x07, 0x3f, 0x3f, 0x00, 0x0c, 0x0e, 0xc3, 0x00, 0x0e, 0x00,
   0x80, 0x83, 0xc0, 0x02, 0x7e, 0xc0, 0x07, 0x3e, 0x3e, 0x00, 0xfc, 0x0f,
   0xc3, 0x00, 0x0c, 0x00, 0xc0, 0xc3, 0xc0, 0x07, 0xfc, 0xc0, 0x07, 0x1e,
   0x7e, 0x00, 0xfc, 0x03, 0xc3, 0x00, 0x0e, 0x00, 0xc0, 0xef, 0xd8, 0x07,
   0xfe, 0xc0, 0x07, 0x3f, 0x7e, 0x00, 0x0c, 0x00, 0xc3, 0x00, 0x0c, 0x00,
   0xe0, 0xff, 0xfe, 0x07, 0xfc, 0xc0, 0x03, 0x1f, 0x7c, 0x00, 0x0c, 0x00,
   0xc3, 0x00, 0x06, 0x00, 0xe0, 0xff, 0xff, 0x0f, 0xfe, 0xc0, 0x87, 0x1f,
   0x7c, 0x00, 0x1c, 0x00, 0xc3, 0x00, 0x06, 0x00, 0xf0, 0xff, 0xff, 0x0f,
   0x7c, 0xc0, 0xf7, 0x9f, 0x7f, 0x00, 0x0c, 0x00, 0xc3, 0x00, 0x07, 0x00,
   0xf0, 0xff, 0xf7, 0x0f, 0x3e, 0xc0, 0xf7, 0x8f, 0x7f, 0x00, 0x0c, 0x00,
   0xc3, 0x80, 0x03, 0x00, 0xf8, 0xff, 0x8f, 0x1f, 0x3c, 0xc0, 0xf7, 0x8f,
   0x7f, 0x00, 0x0c, 0x00, 0xc3, 0xff, 0x01, 0x00, 0xf8, 0xff, 0x3f, 0x1c,
   0x3e, 0xc0, 0xff, 0x83, 0x3f, 0x00, 0x1c, 0x00, 0xc3, 0x7f, 0x00, 0x00,
   0xfc, 0xff, 0xff, 0x1e, 0x3c, 0xc0, 0xf3, 0x81, 0x1f, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0x07, 0x28, 0x40, 0x25, 0x00,
   0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0xff, 0x03,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0xf8, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0xf0, 0xff, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };



void draw(void) {
// graphic commands to redraw the complete screen should be placed here
  u8g2.drawXBMP( 42, 0, ironman_width, ironman_height, ironman_bits);
}

void drawcelsius() {
  u8g2.drawXBMP( 0, 0, fds_pid_logo_width, fds_pid_logo_height, fds_pid_logo_bits);
}

void setup(void) {
  u8g2.begin();
}

void loop(void) {
  // picture loop
  u8g2.firstPage();
  do {
    drawcelsius();
  } while( u8g2.nextPage() );
 
  // rebuild the picture after some delay
  delay(DELAY_LOGO);


  // picture loop
  u8g2.firstPage();
  do {
    draw();
  } while( u8g2.nextPage() );
 
  // rebuild the picture after some delay
  delay(DELAY_LOGO);
}

